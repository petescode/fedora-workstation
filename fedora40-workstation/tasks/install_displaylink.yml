---
# Fetch and install an rpm from a web address.
# DisplayLink is a common graphics driver for docking stations to be able to use external monitors.
# Other docking station ports such as Ethernet, audio, and USB will work natively without the DisplayLink driver.
#
# This task-list playbook could have just been a single GET request to the direct URL after I manually discovered it, however
#   I wanted to capture the entire process of following links from page to page, to make it more resilient to potential future change.
# Also I often refer back to my own examples at a later time when trying to solve similar problems.
#
# The flow as of this writing goes like this:
#  latest page: https://github.com/displaylink-rpm/displaylink-rpm/releases/latest -->
#   specific version page: https://github.com/displaylink-rpm/displaylink-rpm/releases/tag/v5.8.0-3 -->
#    final download page: https://github.com/displaylink-rpm/displaylink-rpm/releases/expanded_assets/v5.8.0-3 -->
#     final download link: https://github.com/displaylink-rpm/displaylink-rpm/releases/download/v5.8.0-3/fedora-40-displaylink-1.14.4-1.github_evdi.x86_64.rpm
#
# Some useful method references I used here:
#   https://docs.ansible.com/ansible/latest/collections/ansible/builtin/regex_search_filter.html
#   https://docs.ansible.com/ansible/latest/collections/ansible/builtin/urlsplit_filter.html
#   https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_filters.html#managing-file-names-and-path-names
# 

######################### add conditional logic to not install if not fedora version that matches us
- name: set variable for the version of Fedora being run
  ansible.builtin.set_fact:
    fedora_version_string: "{{ ansible_distribution | lower }}-{{ ansible_distribution_version }}"

# - name: debugging
#   ansible.builtin.debug:
#     var: fedora_version_string

### GET SPECIFIC VERSION FROM LATEST PAGE
# we are here: https://github.com/displaylink-rpm/displaylink-rpm/releases/latest
- name: grab contents of the "latest" release page
  ansible.builtin.uri:
    url: https://github.com/displaylink-rpm/displaylink-rpm/releases/latest
    return_content: true
  register: latest_release_page

## debugging
# - set_fact:
#     elements: "{{ latest_release_page|list }}"
# - debug:
#     var: item
#   loop: "{{ elements }}"

# - name: debugging
#   ansible.builtin.debug:
#     msg:
#       var1: "{{ latest_release_page.url }}"
#       var2: "{{ latest_release_page.url | urlsplit('path') | basename }}"

- name: parse displaylink latest version and create variables
  ansible.builtin.set_fact:
    displaylink_version_url: "{{ latest_release_page.url }}"
    displaylink_version: "{{ latest_release_page.url | urlsplit('path') | basename }}"


### FOLLOW
# we are here: https://github.com/displaylink-rpm/displaylink-rpm/releases/tag/v5.8.0-3
- name: load displaylink specific version page into variable
  ansible.builtin.uri:
    url: "{{ displaylink_version_url }}"
    return_content: true
  register: specific_displaylink_version_page

# - name: debugging
#   ansible.builtin.debug:
#     msg: "{{ specific_displaylink_version_page }}"


### FIND THE ASSETS PAGE
# the "Assets" section of the specific DisplayLink version page contains a forwarding url we need
- name: parse the "Assets" section to grab the specific latest version url
  ansible.builtin.set_fact:
    assets_url: "{{ specific_displaylink_version_page.content | regex_search('https://github.com.*' + 'assets/' + displaylink_version) }}"

# - name: debugging
#   ansible.builtin.debug:
#     msg: "{{ specific_displaylink_version_page.content | regex_search('https://github.com.*' + 'assets/' + displaylink_version) }}"


### FOLLOW
# we are here: https://github.com/displaylink-rpm/displaylink-rpm/releases/expanded_assets/v5.8.0-3
- name: grab contents of the dedicated "Assets" page
  ansible.builtin.uri:
    url: "{{ assets_url }}"
    return_content: true
  register: assets_page

# - name: debugging
#   ansible.builtin.debug:
#     var: assets_page

- name: regex for current Fedora version x86_64 rpm file
  ansible.builtin.set_fact:
    file_path: "{{ assets_page.content | regex_search('/.*' + fedora_version_string + '.*x86_64.rpm') }}"

# - name: debugging
#   ansible.builtin.debug:
#     var: file_path


### CHECK COMPATIBILITY
# sometimes DisplayLink lags behing Fedora releases, so we should check to make sure the latest driver actually supports this Fedora release
# - name: ensure that the latest DisplayLink rpm is for our version of Fedora
#   ansible.builtin.set_fact:
#     is_compatible: True
#   when: 'fedora_version_string in file_path'

- name: ensure that the latest DisplayLink rpm is for our version of Fedora
  ansible.builtin.set_fact:
    is_compatible: "{{ True if fedora_version_string in file_path else False }}"
    #is_compatible: "{{ False if fedora_version_string in file_path else True }}" # for testing only

# - name: debugging
#   ansible.builtin.debug:
#     var: is_compatible

- name: "notify if incompatible"
  ansible.builtin.debug:
    msg: "This version of the DisplayLink driver does not match {{ fedora_version_string }}. The rest of these tasks will be skipped."
  when: not is_compatible


### DOWNLOAD THE RPM FILE
- name: set variables for download link to file
  ansible.builtin.set_fact:
    file_name: "{{ file_path | basename }}"
    download_link: "https://github.com{{ file_path }}"
  when: is_compatible

# - name: debugging
#   ansible.builtin.debug:
#     msg:
#       file_path: "{{ file_path }}"
#       file_name: "{{ file_name }}"
#       download_link: "{{ download_link }}"
#   when: is_compatible

# we are here: https://github.com/displaylink-rpm/displaylink-rpm/releases/download/v5.8.0-3/fedora-40-displaylink-1.14.4-1.github_evdi.x86_64.rpm
- name: download DisplayLink rpm file
  ansible.builtin.get_url:
    url: "{{ download_link }}"
    dest: "/home/{{ user_account }}/Downloads"
    owner: "{{ user_account }}"
    group: "{{ user_account }}"
  when: is_compatible


### INSTALL
- name: install DisplayLink rpm
  ansible.builtin.dnf:
    name: "/home/{{ user_account }}/Downloads/{{ file_name }}"
    state: present
    disable_gpg_check: True
  when: is_compatible
...